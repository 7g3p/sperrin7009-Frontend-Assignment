{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7G3P\\\\reactNodeProjects\\\\Frontend-Assignment\\\\sperrin7009-reddit-frontend-assignment\\\\src\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { SearchResDropDown } from './Components/searchResultDropdown.js';\nimport PostList from './Components/postListings.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchSubreddits = () => {\n  _s();\n\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [postList, setPostList] = useState([]);\n  const searchURL = `subreddits/search.json?q=${query}&limit=10`;\n  const postListingURL = `/hot.json?limit=10`;\n  const baseURL = `https://www.reddit.com/`; // Consistently update query string to match what is written\n\n  useEffect(() => {\n    setQuery(search);\n  }); // Update when the query string has been updated and fetch the search results\n\n  useEffect(() => {\n    fetch(baseURL + searchURL).then(res => {\n      res.json().then(data => {\n        if (data.data !== undefined) {\n          setSearchResults(data.data.children);\n        }\n      });\n    }).catch(error => {\n      console.log(\"***ERROR: \" + error);\n    });\n  }, [query]);\n  useEffect(() => {\n    fetch(baseURL + subreddit + postListingURL).then(res => {\n      if (res.status === 403 || res.status === 404) {\n        window.alert(baseURL + subreddit + \" cannot be reach. Try a different subreddit.\");\n      }\n\n      res.json().then(data => {\n        if (data.data !== undefined) {\n          setPostList(data.data.children);\n          console.log(data);\n        }\n      }).catch(error => {\n        console.log(\"****ERROR: \" + error);\n      });\n    }).catch(error => {\n      console.log(\"***ERROR: \" + error);\n    });\n  }, [subreddit]); // Update the value of the searchbar search string\n\n  const changeValueHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex sticky top-12 items-center rounded-full shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-l-full w-full py-4 px-6 text-gray-700 leading-tight focus:outline-none\",\n        id: \"search\",\n        type: \"text\",\n        placeholder: \"Search\",\n        value: search,\n        onChange: changeValueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-400 focus:outline-none w-12 h-12 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute origin-top-right top-20 left-0 ml-10 mt-0.5 w-3/6 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\",\n        role: \"menu\",\n        \"aria-orientation\": \"vertical\",\n        \"aria-labelledby\": \"options-menu\",\n        children: /*#__PURE__*/_jsxDEV(SearchResDropDown, {\n          result: searchResults,\n          search: search,\n          setSubreddit: setSubreddit,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      postList: postList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchSubreddits, \"xT7R3Skxx7qdkcf9wuyrVhR/FEU=\");\n\n_c = SearchSubreddits;\nexport default SearchSubreddits;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSubreddits\");","map":{"version":3,"sources":["C:/Users/7G3P/reactNodeProjects/Frontend-Assignment/sperrin7009-reddit-frontend-assignment/src/search.js"],"names":["React","useState","useEffect","SearchResDropDown","PostList","FontAwesomeIcon","faSearch","SearchSubreddits","subreddit","setSubreddit","query","setQuery","search","setSearch","searchResults","setSearchResults","postList","setPostList","searchURL","postListingURL","baseURL","fetch","then","res","json","data","undefined","children","catch","error","console","log","status","window","alert","changeValueHandler","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {SearchResDropDown} from './Components/searchResultDropdown.js';\r\nimport PostList from './Components/postListings.js';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SearchSubreddits = () => {\r\n    const [subreddit, setSubreddit] = useState(\"\");\r\n    const [query, setQuery] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [postList, setPostList] = useState([]);\r\n    const searchURL = `subreddits/search.json?q=${query}&limit=10`\r\n    const postListingURL = `/hot.json?limit=10`;\r\n    const baseURL = `https://www.reddit.com/`;\r\n\r\n    // Consistently update query string to match what is written\r\n    useEffect(() =>{\r\n        setQuery(search);\r\n    });\r\n\r\n    // Update when the query string has been updated and fetch the search results\r\n    useEffect(() => {\r\n        fetch(baseURL + searchURL)\r\n        .then((res) => {\r\n            res.json().then((data) => {\r\n                if (data.data !== undefined){\r\n                    setSearchResults(data.data.children);\r\n                }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"***ERROR: \" + error);\r\n        })\r\n    }, [query])\r\n\r\n    useEffect(() => {\r\n        fetch(baseURL + subreddit + postListingURL)\r\n        .then((res) => {\r\n            if (res.status === 403 || res.status === 404)\r\n            {\r\n                window.alert((baseURL + subreddit) + \" cannot be reach. Try a different subreddit.\");\r\n            }\r\n            res.json().then((data) => {\r\n                if (data.data !== undefined){\r\n                    setPostList(data.data.children);\r\n                    console.log(data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"****ERROR: \" + error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"***ERROR: \" + error);\r\n        });\r\n    }, [subreddit]);\r\n\r\n    // Update the value of the searchbar search string\r\n    const changeValueHandler = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"flex sticky top-12 items-center rounded-full shadow-xl\">\r\n                <input \r\n                className=\"rounded-l-full w-full py-4 px-6 text-gray-700 leading-tight focus:outline-none\" \r\n                id=\"search\" \r\n                type=\"text\" \r\n                placeholder=\"Search\"\r\n                value={search}\r\n                onChange={changeValueHandler}\r\n                />\r\n                <div className=\"p-4\">\r\n                    <button className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-400 focus:outline-none w-12 h-12 flex items-center justify-center\">\r\n                        <FontAwesomeIcon icon={faSearch}/>\r\n                    </button>\r\n                </div>\r\n\r\n                <div \r\n                className=\"absolute origin-top-right top-20 left-0 ml-10 mt-0.5 w-3/6 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" \r\n                role=\"menu\" \r\n                aria-orientation=\"vertical\" \r\n                aria-labelledby=\"options-menu\"\r\n                >\r\n                    <SearchResDropDown \r\n                    result={searchResults} \r\n                    search={search}\r\n                    setSubreddit={setSubreddit} \r\n                    setSearch={setSearch}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <PostList \r\n            postList={postList}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchSubreddits;"]},"metadata":{},"sourceType":"module"}