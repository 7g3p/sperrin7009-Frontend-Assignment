{"ast":null,"code":"import React from 'react';\nimport receiveMessage from './receive-message.js';\nlet windowObjectReference = null;\nlet previousUrl = null;\n\nconst openSignInWindow = (url, name) => {\n  // remove any existing event listeners\n  window.removeEventListener('message', receiveMessage); // window features\n\n  const strWindowFeatures = 'toolbar=no, menubar=no, width=600, height=700, top=100, left=100';\n\n  if (windowObjectReference === null || windowObjectReference.closed) {\n    /* if the pointer to the window object in memory does not exist\r\n     or if such pointer exists but the window was closed */\n    windowObjectReference = window.open(url, name, strWindowFeatures);\n  } else if (previousUrl !== url) {\n    /* if the resource to load is different,\r\n     then we load it in the already opened secondary window and then\r\n     we bring such window back on top/in front of its parent window. */\n    windowObjectReference = window.open(url, name, strWindowFeatures);\n    windowObjectReference.focus();\n  } else {\n    /* else the window reference must exist and the window\r\n     is not closed; therefore, we can bring it back on top of any other\r\n     window with the focus() method. There would be no need to re-create\r\n     the window or to reload the referenced resource. */\n    windowObjectReference.focus();\n  } // add the listener for receiving a message from the popup\n\n\n  window.addEventListener('message', event => receiveMessage(event), false); // assign the previous URL\n\n  previousUrl = url;\n};\n\nexport default openSignInWindow;","map":{"version":3,"sources":["C:/Users/7G3P/reactNodeProjects/Frontend-Assignment/reddit-saves-project/src/Components/open-auth-popup.js"],"names":["React","receiveMessage","windowObjectReference","previousUrl","openSignInWindow","url","name","window","removeEventListener","strWindowFeatures","closed","open","focus","addEventListener","event"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,IAAIC,qBAAqB,GAAG,IAA5B;AACA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrC;AACAC,EAAAA,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsCP,cAAtC,EAFqC,CAIrC;;AACA,QAAMQ,iBAAiB,GACrB,kEADF;;AAGA,MAAIP,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,CAACQ,MAA5D,EAAoE;AAClE;AACL;AACKR,IAAAA,qBAAqB,GAAGK,MAAM,CAACI,IAAP,CAAYN,GAAZ,EAAiBC,IAAjB,EAAuBG,iBAAvB,CAAxB;AACD,GAJD,MAIO,IAAIN,WAAW,KAAKE,GAApB,EAAyB;AAC9B;AACL;AACA;AACKH,IAAAA,qBAAqB,GAAGK,MAAM,CAACI,IAAP,CAAYN,GAAZ,EAAiBC,IAAjB,EAAuBG,iBAAvB,CAAxB;AACAP,IAAAA,qBAAqB,CAACU,KAAtB;AACD,GANM,MAMA;AACL;AACL;AACA;AACA;AACKV,IAAAA,qBAAqB,CAACU,KAAtB;AACD,GAxBoC,CA0BrC;;;AACAL,EAAAA,MAAM,CAACM,gBAAP,CAAwB,SAAxB,EAAmCC,KAAK,IAAIb,cAAc,CAACa,KAAD,CAA1D,EAAmE,KAAnE,EA3BqC,CA4BrC;;AACAX,EAAAA,WAAW,GAAGE,GAAd;AACD,CA9BF;;AAgCC,eAAeD,gBAAf","sourcesContent":["import React from 'react';\r\nimport receiveMessage from './receive-message.js';\r\n\r\nlet windowObjectReference = null;\r\nlet previousUrl = null;\r\n\r\nconst openSignInWindow = (url, name) => {\r\n   // remove any existing event listeners\r\n   window.removeEventListener('message', receiveMessage);\r\n\r\n   // window features\r\n   const strWindowFeatures =\r\n     'toolbar=no, menubar=no, width=600, height=700, top=100, left=100';\r\n\r\n   if (windowObjectReference === null || windowObjectReference.closed) {\r\n     /* if the pointer to the window object in memory does not exist\r\n      or if such pointer exists but the window was closed */\r\n     windowObjectReference = window.open(url, name, strWindowFeatures);\r\n   } else if (previousUrl !== url) {\r\n     /* if the resource to load is different,\r\n      then we load it in the already opened secondary window and then\r\n      we bring such window back on top/in front of its parent window. */\r\n     windowObjectReference = window.open(url, name, strWindowFeatures);\r\n     windowObjectReference.focus();\r\n   } else {\r\n     /* else the window reference must exist and the window\r\n      is not closed; therefore, we can bring it back on top of any other\r\n      window with the focus() method. There would be no need to re-create\r\n      the window or to reload the referenced resource. */\r\n     windowObjectReference.focus();\r\n   }\r\n\r\n   // add the listener for receiving a message from the popup\r\n   window.addEventListener('message', event => receiveMessage(event), false);\r\n   // assign the previous URL\r\n   previousUrl = url;\r\n };\r\n\r\n export default openSignInWindow;"]},"metadata":{},"sourceType":"module"}